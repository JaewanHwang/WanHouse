<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.happyhouse.model.mapper.HouseMapper">

    <select id="getSido" resultType="sidoGugunCodeDto">
        select left (sidoCode, 2) sidoCode, sidoName
        from sidocode
        order by sidoCode
    </select>

    <select id="getGugunInSido" parameterType="string" resultType="sidoGugunCodeDto">
        select left (gugunCode, 5) gugunCode, gugunName
        from guguncode
        where left (gugunCode, 2) = #{sido}
        order by gugunCode
    </select>

    <select id="getDongInGugun" parameterType="string" resultType="houseInfoDto">
        select distinct dongName, dongCode
        from houseinfo
        where left (dongCode, 5) = #{gugun}
        order by dongName
    </select>

    <select id="getApts" parameterType="map" resultType="houseInfoDto">
        select distinct hi.aptCode, hi.kaptCode, hi.aptName, hi.dongCode, hi.dongName, dc.sidoName, dc.gugunName,
        hi.jibun, hi.lat, hi.lng
        from houseinfo hi inner join housedeal hd inner join dongcode dc
        on hi.aptCode = hd.aptCode and hi.dongCode = dc.dongCode
        <where>
            <choose>
                <when test="lat != null and lat != null">
                    and ST_Distance_Sphere(POINT(#{lng}, #{lat}), POINT(lng, lat)) &lt;= 3000 -- 지도 반경 설정, 현재: 3km
                </when>
                <otherwise>
                    <if test="keyword != null">
                        and hi.aptName like concat('%', #{keyword}, '%')
                    </if>
                </otherwise>
            </choose>
            <if test="area != null">
                and hd.area + 0.0 >= #{area}
            </if>
            <if test="dealAmount != null">
                and (replace(hd.dealAmount, ",", "") + 0) >= (#{dealAmount} * 10000)
            </if>
            <if test="buildYear != null">
                and hi.buildYear >= #{buildYear}
            </if>
        </where>
        <if test="order != null">
            order by ${order}
            <if test='!order.equals("aptName")'>desc</if>
        </if>
        limit 10;
    </select>


    <select id="getHouseDealsByAptCode" parameterType="biginteger" resultType="houseDealDto">
        select dealAmount, dealYear, dealMonth, dealDay, round(hd.area + 0.0, 2) as area, floor
        from houseinfo hi
                 join housedeal hd
                      on hi.aptCode = hd.aptCode
        where hi.aptCode = #{aptCode};
    </select>

    <select id="getHouseInfo" parameterType="biginteger" resultType="HouseInfoDto">
        select *
        from houseinfo
                 inner join dongcode
                            on houseinfo.dongCode = dongcode.dongCode
        where aptCode = #{aptCode};
    </select>

    <select id="getDongs" parameterType="string" resultType="DongDto">
        select dongCode, concat(sidoName, ' ', gugunName, ' ', dongName) as fullName, lng, lat
        from baseaddress
        where dongName like concat('%', #{keyword}, '%')
    </select>

    <insert id="likeThisApt" parameterType="map">
        insert into interest
        values (#{aptCode}, #{userId})
    </insert>

    <delete id="unlikeThisApt" parameterType="map">
        delete
        from interest
        where aptCode = #{aptCode}
          and userId = #{userId}
    </delete>

    <select id="selectLikedApts" parameterType="string" resultType="LikedHouseDto">
        select distinct hi.aptCode, hi.kaptCode, hi.aptName, round(hd.area + 0.0, 2) as area, hi.dongCode, hi.dongName, dc.sidoName, dc.gugunName,
        hi.jibun, hi.lat, hi.lng, max(replace(hd.dealAmount, ",", "") + 0) as maxPrice, min(replace(hd.dealAmount, ",", "") + 0) as minPrice
        from interest inner join houseinfo hi inner join housedeal hd inner join dongcode dc
        on interest.aptCode = hi.aptCode and hi.aptCode = hd.aptCode and hi.dongCode = dc.dongCode
        where interest.userId = #{userId}
        group by hi.aptCode;
    </select>

</mapper>